docker-sign-in: &docker-sign-in
  name: login to doker remote
  command: |
    docker login \
      --username $DOCKER_USER \
      --password $DOCKER_PASS

mapping-var-env: &mapping-var-env
  name: define var with branch
  command: |
    case "$CIRCLE_BRANCH" in
      "master") ENV=prod
        ;;
      "release") ENV=next
        ;;
      "develop") ENV=staging
        ;;
      *) ENV=dev_$(echo $CIRCLE_BRANCH | tr "/" "-")
        ;;
    esac
    echo 'export ENV='$ENV >> $BASH_ENV

version: 2.1

references:
  container_config: &container_config
    docker:
      - image: circleci/python:3.8
      - image: circleci/postgres:10-alpine
        environment:
          POSTGRES_PASSWORD: "platform_back"
          POSTGRES_DB: "platform_back"
          POSTGRES_USER: "platform_back"
    working_directory: ~/repo

jobs:
  test:
    <<: *container_config
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Pipfile.lock" }}
            - v1-dependencies

      - run:
          name: install dependencies
          command: pipenv sync --dev

      # run tests!
      - run:
          name: run tests
          command: pipenv run python manage.py test

      - save_cache:
          paths:
            - ~/.local
            - ~/.cache
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}

  build_and_push:
    <<: *container_config
    steps:
      - checkout
      - setup_remote_docker
      - add_ssh_keys
      - run: *mapping-var-env
      - run: *docker-sign-in
      - run:
          name: backup previous image
          command: |
            if export DOCKER_CLI_EXPERIMENTAL=enabled && docker manifest inspect "bimdata/platform_back:prev-$ENV" > /dev/null; then
              docker pull "bimdata/platform_back:$ENV"
              docker image tag "bimdata/platform_back:$ENV" "bimdata/platform_back:prev-$ENV"
              docker push "bimdata/platform_back:prev-$ENV"
            fi
      - run:
          name: build docker image
          command: |
            echo $CIRCLE_SHA1 > VERSION
            docker build --tag "bimdata/platform_back:$ENV" .
      - run:
          name: push new image
          command: docker push "bimdata/platform_back:$ENV"
      - run:
          name: push latest tag image
          command: |
            if [[ "$CIRCLE_BRANCH" == "develop" ]]; then
              docker tag "bimdata/platform_back:$ENV" bimdata/platform_back:latest
              docker push bimdata/platform_back:latest
            fi

  deploy:
    <<: *container_config
    steps:
      - checkout
      - setup_remote_docker
      - run: *docker-sign-in
      - run: *mapping-var-env
      - run:
          name: ansible deployment
          command: |
            docker run -e ANSIBLE_VAULT_PASSWD bimdata/deployment:latest \
              ansible-playbook \
              --inventory-file inventories/$ENV \
              --tags platform_back \
              --extra-vars "ansible_ssh_private_key_file=./files/deploy_rsa" \
              --user deploy  \
              deploy.yml
      - run:
          name: sliding tag gitflow
          command: |
            git tag --force $ENV
            echo -e "Host github.com\n  StrictHostKeyChecking no" >> ~/.ssh/config
            git push --force origin $ENV

workflows:
  test_and_deploy:
    jobs:
      - test
      - deploy_docker_dev:
          type: approval
          filters:
            branches:
              ignore:
                - master
                - release
                - develop
      - build_and_push:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - release
                - develop
      - deploy:
          requires:
            - build_and_push
      - build_and_push:
          name: build_and_push_docker_dev
          requires:
            - deploy_docker_dev
